---

layout: default
title: "Algoritmica su stringhe - 2009-10"

---

###Obiettivi formativi###

Il corso introduce i principali algoritmi di ricerca e analisi di testi che trovano applicazione nella realizzazione di strumenti software oggi utilizzati in vari contesti applicativi, fra cui la Bioinformatica.


* Algoritmi di pattern matching esatto:Knuth-Morris-Pratt, Boyer-Moore, Karp-Rabin. Bit-parallel.

* Suffix trees e suffix arrays.

* Pattern matching approssimato.

* Compressione di testi.

* Espressioni regolari.

* Allineamento di sequenze.


###Risultati di apprendimento previsti###

Si prevede che lo studente acquisisca l'abilità  di progettare e implementare algoritmi di ricerca di pattern e compressione dati.

###Orario###

L'orario effettivo di lezione è: Mer 10.00-13.00.
Mercoledì 11/5 la lezione inizierà alle 10.40.


###Modalità  di esame###

L'esame consiste in uno scritto e un progetto.

Lo scritto prevede alcune domande sugli argomenti trattati nel corso.

Il progetto deve essere concordato individualmente con il docente. Deve essere svolto individualmente e può avere sia carattere implementativo che teorico. Il progetto deve essere consegnato entro sette giorni dalla data dello scritto ed è valido per un anno accademico (rimane valido anche se non viene superato lo scritto). Nel caso di scritto sostenuto nel primo appello, è possibile consegnare il progetto entro un mese dalla data dello scritto.

Il punteggio finale viene ottenuto per il 25% dalla valutazione dello scritto e per il 75% dalla valutazione del progetto. Devono però avere entrambi una valutazione positiva.

###Materiale didattico###

Il libro di testo adottato è "Algorithms on Strings, Trees and Sequences", di Daniel Gusfiled, Cambridge Univ. Press. Ulteriore materiale verrà  indicato dal docente durante le lezioni.

Ulteriori informazioni saranno disponibili durante il periodo di lezione nella pagina relativa all'insegnamento sulla piattaforma di e-learning.

Tutti gli studenti sono fortemente invitati ad iscriversi al <a title="http://informatica.elearning.unimib.it/course/view.php?id=193" href="http://informatica.elearning.unimib.it/course/view.php?id=193">corso sulla piattaforma di e-learning</a>, in quanto solo in questo modo è posssibile scaricare il materiale didattico e contattare il docente.

Gli studenti che intendono seguire le lezioni sono fortemente invitati ad al corso. In questo modo è possibile ricevere aggiornamenti e informazioni.

###Diario delle lezioni###



* Pattern matching. Algoritmo di Knuth-Morris-Pratt.

* Cenni dell'algoritmo di Aho-Corasick. Algoritmo di Boyer-Moore.

* Algoritmi basati su NFA. Algoritmi seminumerici. Pattern matching approssimato: agrep. Programmazione dinamica.

* Algoritmo di Karp-Rabin. Algoritmi basati su FFT.

* Alberi di suffisso: Definizioni. Array di suffisso: Definizioni. Relazioni fra alberi di suffisso e array. Alberi di suffisso generalizzati. Algoritmo O(km) per il calcolo di una sottostringa comune piÃ¹ lunga di k stringhte.

* Array di suffisso: algoritmo per la costruzione

* Array di suffisso: algoritmi per il pattern matching.

* Applicazioni degli alberi di suffisso: sottostringa più lunga. Grafo delle parole (DAWG). Compressione tipo Lempel-Ziv con alberi di suffisso.

* Applicazioni degli alberi di suffisso: ricerca di stringhe contenute in altre stringhe. Altre applicazioni degli alberi di suffisso: ricerca dei palindromi, matching con wildcard

* Tandem repeats, sottostringa comune più lunga. Tandem repeats in stringhe circolari.

* Algoritmi per pattern matching approssimato: Baeza-Yates Perleberg, Chang Lawler, Myers

* Distanza di edit pesata: algoritmi basati su alberi di suffisso.

* Tecnica di Hirschberg. Distanza di edit con banda.

* Tecnica dei quattro russi.

* Allineamento locale e globale di 2 sequenze. Gap (definizioni)

* Algoritmi per gap generici, affini e convessi. Allineamento di k sequenze: Programmazione dinamica, algoritmo di Carrillo-Lipman.

* Espressioni regolari.

* Cenni di compressione LZ, Burrows-Wheeler (Bzip)

